name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Update version in version.py
      shell: pwsh
      run: |
        # Remove 'v' prefix from tag to get version number
        $VERSION = ${{ github.ref_name }}.TrimStart('v')
        # Update version.py using PowerShell
        $content = Get-Content -Path "src/utils/version.py" -Raw
        $content = $content -replace "__version__ = '.*'", "__version__ = '$VERSION'"
        Set-Content -Path "src/utils/version.py" -Value $content
        Write-Host "Updated version to $VERSION in version.py"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Install Inno Setup
      run: |
        choco install innosetup --yes --force
    
    - name: Build executable
      run: |
        python build.py
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Output/DailyRegister_Setup_${{ github.ref_name }}.exe
        asset_name: DailyRegister_Setup_${{ github.ref_name }}.exe
        asset_content_type: application/x-msdownload 