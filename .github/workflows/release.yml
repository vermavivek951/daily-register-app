name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# Add permissions configuration
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        pip install inno-setup-compiler
        pip install pywin32
        pip install PyQt6
        pip install PyQt6-Qt6
        pip install PyQt6-sip
    
    - name: Debug - Show Python Environment
      run: |
        python --version
        pip --version
        pip list
        echo "=== Checking Dependencies ==="
        python -c "import PyQt6; print('PyQt6 version:', PyQt6.__version__)"
        python -c "import PyQt6.QtCore; print('QtCore available')"
        python -c "import PyQt6.QtWidgets; print('QtWidgets available')"
        python -c "import matplotlib; print('matplotlib version:', matplotlib.__version__)"
        python -c "import pandas; print('pandas version:', pandas.__version__)"
        python -c "import openpyxl; print('openpyxl version:', openpyxl.__version__)"
    
    - name: Update version
      shell: pwsh
      run: |
        $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
        Write-Host "Setting version to: $version"
        $content = Get-Content -Path "src/utils/version.py" -Raw
        $pattern = '__version__ = ".*"'
        $replacement = "__version__ = `"$version`""
        $content = $content -replace $pattern, $replacement
        Set-Content -Path "src/utils/version.py" -Value $content
        Write-Host "Updated version.py content:"
        Get-Content -Path "src/utils/version.py"
    
    - name: Debug - Show Installed Packages
      run: |
        echo "=== Installed Packages ==="
        pip list
        echo "=== Package Details ==="
        pip show PyQt6
        pip show PyQt6-Qt6
        pip show PyQt6-sip
        pip show matplotlib
        pip show pandas
        pip show openpyxl
    
    - name: Build executable
      run: python build.py --version ${{ github.ref_name }}
    
    - name: Debug - Show Build Output
      run: |
        echo "=== Build Output Debug Information ==="
        echo "Current directory: $PWD"
        echo ""
        echo "Output directory contents:"
        Get-ChildItem -Path "Output" -Recurse | ForEach-Object {
          if ($_.Name -match "DailyRegister_Setup_v.*\.exe") {
            echo "  $($_.FullName)"
            echo "    >>> This is the installer we're looking for <<<"
          } else {
            echo "  $($_.FullName)"
          }
        }
        echo ""
        echo "Dist directory contents:"
        Get-ChildItem -Path "dist" -Recurse | ForEach-Object {
          echo "  $($_.FullName)"
        }
        echo ""
        echo "Build directory contents:"
        Get-ChildItem -Path "build" -Recurse | ForEach-Object {
          echo "  $($_.FullName)"
        }
        echo ""
        echo "=== End Debug Information ==="
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Output/DailyRegister_Setup_${{ github.ref_name }}.exe
        asset_name: DailyRegister_Setup_${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream 